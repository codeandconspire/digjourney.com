@import "../base";

/* @define Hero */
.Hero {
  display: flex;
  flex-direction: column;
  padding: 5rem 0 8rem;
  color: #fff;
  background-color: rgb(var(--color-blue));
  margin-bottom: 10vh;
}

.Hero::before {
  flex: 0 1 auto;
  content: "";
  height: 25vh;
}

@media (min-width: 600px) {
  .Hero::before {
    height: 26vh;
  }
}

.Hero-body {
  font-weight: bold;
  font-size: 1.33rem;
  line-height: 1.35;
  max-width: 75rem;
}

@media (min-width: 600px) {
  .Hero-body {
    font-size: 1.8rem;
  }
}

@media (min-width: 1400px) {
  .Hero-body {
    font-size: 2.5rem;
    line-height: 1.25;
  }
}

.Hero-label {
  font-size: 1rem;
  font-weight: normal;
}

.Hero-body a:not([class]) {
  color: rgb(var(--color-pink));
  white-space: nowrap;
  border-bottom: 2px solid currentColor;
}

.Hero-body a:not([class]):active {
  opacity: 0.5;
}

.Hero-body h1 {
  margin-bottom: 1.3rem;
  font-size: 2.6rem;
  line-height: 1.15;
}

@media (min-width: 600px) {
  .Hero-body h1 {
    font-size: 3.3rem;
  }
}

@media (min-width: 900px) {
  .Hero-body h1 {
    font-size: 4rem;
    margin-bottom: 2.5rem;
  }

  .Hero-body a:not([class]) {
    border-bottom-width: 4px;
  }
}

@media (min-width: 1400px) {
  .Hero-body h1 {
    font-size: 5rem;
    margin-bottom: 3.3rem;
  }
}

/**
 * Themes
 */

.Hero--gray {
  color: rgb(var(--color-blue));
  background-color: rgb(var(--color-gray));
}

.Hero--gray .Hero-body a:not([class]) {
  color: rgb(var(--color-pink));
}

.Hero--yellow {
  color: rgb(var(--color-blue));
  background-color: rgb(var(--color-yellow));
}

.Hero--yellow .Hero-body a:not([class]) {
  color: rgb(var(--color-blue));
}

.Hero--orange {
  color: #fff;
  background-color: rgb(var(--color-orange));
}

.Hero--orange .Hero-body a:not([class]) {
  color: rgb(var(--color-yellow));
}

.Hero--turquoise {
  color: #fff;
  background-color: rgb(var(--color-turquoise));
}

.Hero--turquoise .Hero-body a:not([class]) {
  color: rgb(var(--color-yellow));
}

.Hero--pink {
  color: rgb(var(--color-blue));
  background-color: rgb(var(--color-pink));
}

.Hero--pink .Hero-body a:not([class]) {
  color: rgb(var(--color-blue));
}

.Hero--blue {
  --loading-color: 255, 255, 255, 0.16;
  color: #fff;
  background-color: rgb(var(--color-blue));
}

.Hero--blue .Hero-body a:not([class]) {
  color: rgb(var(--color-pink));
}

